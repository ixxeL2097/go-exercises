# https://taskfile.dev

version: "3"

tasks:
  build:
    desc: Build docker image for lambda microservice
    vars:
      TAG: '{{ .TAG | default "test" }}'
    cmds:
      - |
        docker buildx build --no-cache \
                            -t lambda:{{ .TAG }} ./lambda
  build:proxy:
    desc: Build docker image for lambda microservice
    vars:
      TAG: '{{ .TAG | default "test" }}'
    cmds:
      - |
        docker buildx build --no-cache \
                            --build-arg GOPROXY=direct \
                            --build-arg GONOPROXY="proxy.golang.org/*" \
                            --build-arg GOINSECURE="golang.org,google.golang.org,gopkg.in,k8s.io,sum.golang.org,sigs.k8s.io" \
                            -t lambda:{{ .TAG }} ./lambda

  push:
    desc: Build docker image for lambda microservice
    vars:
      TAG: '{{ .TAG | default "test" }}'
    cmds:
      - |
        docker tag lambda:{{ .TAG }} ixxel/lambda:{{ .TAG }}
        docker push ixxel/lambda:{{ .TAG }}

  run:docker:
    desc: run the server locally with Docker
    vars:
      PORT: '{{ .PORT | default "8081" }}'
      TAG: '{{ .TAG | default "test" }}'
    cmds:
    - docker run --name lambda -d -e APP_PORT={{ .PORT }} -p {{ .PORT }}:{{ .PORT }} lambda:{{ .TAG }}

  run:local:
    desc: run the server locally
    vars:
      PORT: '{{ .PORT | default "8081" }}'
    cmds:
    - go -C ./lambda mod tidy
    - go -C ./lambda run lambda.go
